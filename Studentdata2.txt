using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Student
{
    public string Name { get; set; }
    public int Age { get; set; }
    public double GPA { get; set; }
    public string Class { get; set; }
}

class Program
{
    static List<Student> students = new List<Student>();

    static void Main()
    {
        ReadStudentDataFromFile("studentData.txt");

        while (true)
        {
            Console.WriteLine("Options:");
            Console.WriteLine("1. Display student data");
            Console.WriteLine("2. Sort students by name");
            Console.WriteLine("3. Sort students by age");
            Console.WriteLine("4. Sort students by class");
            Console.WriteLine("5. Search for a student by name");
            Console.WriteLine("6. Exit");
            Console.Write("Enter your choice: ");

            int choice = int.Parse(Console.ReadLine());

            switch (choice)
            {
                case 1:
                    DisplayStudentData();
                    break;
                case 2:
                    SortStudentsByName();
                    break;
                case 3:
                    SortStudentsByAge();
                    break;
                case 4:
                    SortStudentsByClass();
                    break;
                case 5:
                    SearchStudentByName();
                    break;
                case 6:
                    Environment.Exit(0);
                    break;
                default:
                    Console.WriteLine("Invalid choice. Please try again.");
                    break;
            }
        }
    }

    static void ReadStudentDataFromFile(string fileName)
    {
        try
        {
            using (StreamReader reader = new StreamReader(fileName))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    string[] data = line.Split(',');
                    Student student = new Student
                    {
                        Name = data[0],
                        Age = int.Parse(data[1]),
                        GPA = double.Parse(data[2]),
                        Class = data[3]
                    };
                    students.Add(student);
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error reading file: {ex.Message}");
        }
    }

    static void DisplayStudentData()
    {
        foreach (var student in students)
        {
            Console.WriteLine($"Name: {student.Name}, Age: {student.Age}, GPA: {student.GPA}, Class: {student.Class}");
        }
    }

    static void SortStudentsByName()
    {
        students = students.OrderBy(s => s.Name).ToList();
        Console.WriteLine("Students sorted by name.");
    }

    static void SortStudentsByAge()
    {
        students = students.OrderBy(s => s.Age).ToList();
        Console.WriteLine("Students sorted by age.");
    }

    static void SortStudentsByClass()
    {
        students = students.OrderBy(s => s.Class).ToList();
        Console.WriteLine("Students sorted by class.");
    }

    static void SearchStudentByName()
    {
        Console.Write("Enter student name to search: ");
        string searchName = Console.ReadLine();

        var result = students.Find(s => s.Name.Equals(searchName, StringComparison.OrdinalIgnoreCase));

        if (result != null)
        {
            Console.WriteLine($"Student found - Name: {result.Name}, Age: {result.Age}, GPA: {result.GPA}, Class: {result.Class}");
        }
        else
        {
            Console.WriteLine("Student not found.");
        }
    }
}